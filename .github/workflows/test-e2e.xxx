name: Cypress E2E Tests

on:
  # Trigger for any pull request activity on the develop branch (create, update)
  pull_request:
    branches:
      - develop

concurrency:
  # Filtering on the current branch ref helps avoid concurrency
  group: ${{ github.ref }}
  # Cancel running lint jobs
  cancel-in-progress: true

jobs:
  test:
    name: Checking E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Compile TypeScript (if necessary)
        run: npm run build

      - name: Start the client (port 3000)
        run: npm run client:dev & # Start the Vite client in the background

      - name: Start the server (port 3001)
        env:
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        run: npm run start &  # Start the server in the background

      - name: Run Cypress E2E tests
        run: npx cypress run --e2e --headless # Run E2E tests in headless mode
        continue-on-error: true # Continue on in order to report failed tests

      # Save the downloadable reports artifact for any further investigation
      - name: Upload Cypress report artifacts
        # Upload the report even if tests fail
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-report
          path: cypress/reports/.jsons/mochawesome.json

      - name: Display Cypress test Job Summary
        # Show the summary even if tests fail
        if: always()
        run: |
          # Parse the test report
          RESULTS=$(cat cypress/reports/.jsons/mochawesome.json)

          # Extract the results from the report
          PASSED=$(echo $RESULTS | jq '.stats.passes')
          FAILED=$(echo $RESULTS | jq '.stats.failures')
          PENDING=$(echo $RESULTS | jq '.stats.pending')
          SKIPPED=$(echo $RESULTS | jq '.stats.skipped')
          DURATION=$(echo $RESULTS | jq '.stats.duration')

          # Format the duration (convert to seconds and round to 3 decimal places)
          DURATION=$(echo "scale=3; $DURATION / 1000" | bc)

          # Write the report summary to the GitHub Actions job summary in a table format
          echo "## Cypress Test Results" >> $GITHUB_STEP_SUMMARY
          echo "| Result  | Passed ‚úÖ | Failed ‚ùå | Pending ü§ö | Skipped ‚Ü©Ô∏è | Duration üïó |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|-----------|---------|---------|---------|------------|" >> $GITHUB_STEP_SUMMARY
          echo "| Passing | $PASSED   | $FAILED | $PENDING | $SKIPPED | ${DURATION}s |" >> $GITHUB_STEP_SUMMARY

      # Fail the job if there are test failures
      - name: Fail if tests failed
        # Run even if tests fail in order to fail the check
        if: always()
        run: |
          RESULTS=$(cat cypress/reports/.jsons/mochawesome.json)
          FAILED=$(echo $RESULTS | jq '.stats.failures')

          if [ "$FAILED" -gt 0 ]; then
            echo "Tests failed: $FAILED ‚ùå"
            exit 1
          else
            echo "All tests passed ‚úÖ"
          fi

